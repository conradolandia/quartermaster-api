// This file is auto-generated by @hey-api/openapi-ts

export type BoatCreate = {
  name: string
  slug?: string
  capacity: number
  provider_name: string
  provider_location: string
  provider_address: string
  jurisdiction_id: string
  map_link?: string | null
}

export type BoatPublic = {
  name: string
  slug?: string
  capacity: number
  provider_name: string
  provider_location: string
  provider_address: string
  jurisdiction_id: string
  map_link?: string | null
  id: string
  created_at: string
  updated_at: string
}

export type BoatsPublic = {
  data: Array<BoatPublic>
  count: number
}

export type BoatUpdate = {
  name?: string | null
  capacity?: number | null
  provider_name?: string | null
  provider_location?: string | null
  provider_address?: string | null
  jurisdiction_id?: string | null
  map_link?: string | null
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type BookingCreate = {
  confirmation_code: string
  mission_id: string
  user_name: string
  user_email: string
  user_phone: string
  billing_address: string
  subtotal: number
  discount_amount: number
  tax_amount: number
  tip_amount: number
  total_amount: number
  payment_intent_id: string
  special_requests?: string | null
  status?: BookingStatus
  launch_updates_pref?: boolean
  items: Array<BookingItemCreate>
}

export type BookingItemCreate = {
  trip_id: string
  boat_id: string
  item_type: string
  quantity: number
  price_per_unit: number
  status?: BookingItemStatus
  refund_reason?: string | null
  refund_notes?: string | null
}

export type BookingItemPublic = {
  booking_id: string
  trip_id: string
  boat_id: string
  item_type: string
  quantity: number
  price_per_unit: number
  status?: BookingItemStatus
  refund_reason?: string | null
  refund_notes?: string | null
  id: string
  created_at: string
  updated_at: string
}

export type BookingItemStatus = "active" | "refunded" | "fulfilled"

export type BookingPublic = {
  confirmation_code: string
  mission_id: string
  user_name: string
  user_email: string
  user_phone: string
  billing_address: string
  subtotal: number
  discount_amount: number
  tax_amount: number
  tip_amount: number
  total_amount: number
  payment_intent_id: string
  special_requests?: string | null
  status?: BookingStatus
  launch_updates_pref?: boolean
  id: string
  created_at: string
  updated_at: string
  items: Array<BookingItemPublic>
  qr_code_base64?: string | null
}

export type BookingStatus =
  | "pending_payment"
  | "confirmed"
  | "checked_in"
  | "completed"
  | "cancelled"
  | "refunded"

export type BookingUpdate = {
  status?: BookingStatus | null
  special_requests?: string | null
  tip_amount?: number | null
  discount_amount?: number | null
  tax_amount?: number | null
  total_amount?: number | null
  launch_updates_pref?: boolean | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type JurisdictionCreate = {
  name: string
  state: string
  sales_tax_rate: number
  location_id: string
}

export type JurisdictionPublic = {
  name: string
  state: string
  sales_tax_rate: number
  location_id: string
  id: string
  created_at: string
  updated_at: string
}

export type JurisdictionsPublic = {
  data: Array<JurisdictionPublic>
  count: number
}

export type JurisdictionUpdate = {
  name?: string | null
  state?: string | null
  sales_tax_rate?: number | null
  location_id?: string | null
}

export type LaunchCreate = {
  name: string
  launch_timestamp: string
  summary: string
  location_id: string
}

export type LaunchesPublic = {
  data: Array<LaunchPublic>
  count: number
}

export type LaunchPublic = {
  name: string
  launch_timestamp: string
  summary: string
  location_id: string
  id: string
  created_at: string
  updated_at: string
}

export type LaunchUpdate = {
  name?: string | null
  launch_timestamp?: string | null
  summary?: string | null
  location_id?: string | null
}

export type LocationCreate = {
  name: string
  state: string
}

export type LocationPublic = {
  name: string
  state: string
  id: string
  created_at: string
  updated_at: string
}

export type LocationsPublic = {
  data: Array<LocationPublic>
  count: number
}

export type LocationUpdate = {
  name?: string | null
  state?: string | null
}

export type Message = {
  message: string
}

export type MissionCreate = {
  name: string
  launch_id: string
  active?: boolean
  public?: boolean
  sales_open_at?: string | null
  refund_cutoff_hours?: number
}

export type MissionPublic = {
  name: string
  launch_id: string
  active?: boolean
  public?: boolean
  sales_open_at?: string | null
  refund_cutoff_hours?: number
  id: string
  created_at: string
  updated_at: string
}

export type MissionsPublic = {
  data: Array<MissionPublic>
  count: number
}

export type MissionUpdate = {
  name?: string | null
  launch_id?: string | null
  active?: boolean | null
  public?: boolean | null
  sales_open_at?: string | null
  refund_cutoff_hours?: number | null
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Token = {
  access_token: string
  token_type?: string
}

export type TripBoatCreate = {
  trip_id: string
  boat_id: string
  max_capacity?: number | null
}

export type TripBoatUpdate = {
  trip_id?: string | null
  boat_id?: string | null
  max_capacity?: number | null
}

export type TripCreate = {
  mission_id: string
  type: string
  active?: boolean
  check_in_time: string
  boarding_time: string
  departure_time: string
}

export type TripPublic = {
  mission_id: string
  type: string
  active?: boolean
  check_in_time: string
  boarding_time: string
  departure_time: string
  id: string
  created_at: string
  updated_at: string
}

export type TripsPublic = {
  data: Array<TripPublic>
  count: number
}

export type TripUpdate = {
  mission_id?: string | null
  type?: string | null
  active?: boolean | null
  check_in_time?: string | null
  boarding_time?: string | null
  departure_time?: string | null
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type BoatsReadBoatsData = {
  limit?: number
  skip?: number
}

export type BoatsReadBoatsResponse = BoatsPublic

export type BoatsCreateBoatData = {
  requestBody: BoatCreate
}

export type BoatsCreateBoatResponse = BoatPublic

export type BoatsReadBoatData = {
  boatId: string
}

export type BoatsReadBoatResponse = BoatPublic

export type BoatsUpdateBoatData = {
  boatId: string
  requestBody: BoatUpdate
}

export type BoatsUpdateBoatResponse = BoatPublic

export type BoatsDeleteBoatData = {
  boatId: string
}

export type BoatsDeleteBoatResponse = void

export type BoatsReadBoatsByJurisdictionData = {
  jurisdictionId: string
  limit?: number
  skip?: number
}

export type BoatsReadBoatsByJurisdictionResponse = BoatsPublic

export type BookingsQrCodeRedirectData = {
  confirmationCode: string
}

export type BookingsCreateBookingData = {
  requestBody: BookingCreate
}

export type BookingsCreateBookingResponse = BookingPublic

export type BookingsListBookingsData = {
  limit?: number
  skip?: number
}

export type BookingsListBookingsResponse = Array<BookingPublic>

export type BookingsGetBookingByConfirmationCodeData = {
  confirmationCode: string
}

export type BookingsGetBookingByConfirmationCodeResponse = BookingPublic

export type BookingsGetBookingByIdData = {
  bookingId: string
}

export type BookingsGetBookingByIdResponse = BookingPublic

export type BookingsUpdateBookingData = {
  bookingId: string
  requestBody: BookingUpdate
}

export type BookingsUpdateBookingResponse = BookingPublic

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type JurisdictionsReadJurisdictionsData = {
  limit?: number
  locationId?: string
  skip?: number
}

export type JurisdictionsReadJurisdictionsResponse = JurisdictionsPublic

export type JurisdictionsCreateJurisdictionData = {
  requestBody: JurisdictionCreate
}

export type JurisdictionsCreateJurisdictionResponse = JurisdictionPublic

export type JurisdictionsReadJurisdictionData = {
  jurisdictionId: string
}

export type JurisdictionsReadJurisdictionResponse = JurisdictionPublic

export type JurisdictionsUpdateJurisdictionData = {
  jurisdictionId: string
  requestBody: JurisdictionUpdate
}

export type JurisdictionsUpdateJurisdictionResponse = JurisdictionPublic

export type JurisdictionsDeleteJurisdictionData = {
  jurisdictionId: string
}

export type JurisdictionsDeleteJurisdictionResponse = void

export type LaunchesReadLaunchesData = {
  limit?: number
  skip?: number
}

export type LaunchesReadLaunchesResponse = LaunchesPublic

export type LaunchesCreateLaunchData = {
  requestBody: LaunchCreate
}

export type LaunchesCreateLaunchResponse = LaunchPublic

export type LaunchesReadLaunchData = {
  launchId: string
}

export type LaunchesReadLaunchResponse = LaunchPublic

export type LaunchesUpdateLaunchData = {
  launchId: string
  requestBody: LaunchUpdate
}

export type LaunchesUpdateLaunchResponse = LaunchPublic

export type LaunchesDeleteLaunchData = {
  launchId: string
}

export type LaunchesDeleteLaunchResponse = void

export type LaunchesReadLaunchesByLocationData = {
  limit?: number
  locationId: string
  skip?: number
}

export type LaunchesReadLaunchesByLocationResponse = LaunchesPublic

export type LocationsReadLocationsData = {
  limit?: number
  skip?: number
}

export type LocationsReadLocationsResponse = LocationsPublic

export type LocationsCreateLocationData = {
  requestBody: LocationCreate
}

export type LocationsCreateLocationResponse = LocationPublic

export type LocationsReadLocationData = {
  locationId: string
}

export type LocationsReadLocationResponse = LocationPublic

export type LocationsUpdateLocationData = {
  locationId: string
  requestBody: LocationUpdate
}

export type LocationsUpdateLocationResponse = LocationPublic

export type LocationsDeleteLocationData = {
  locationId: string
}

export type LocationsDeleteLocationResponse = void

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type MissionsReadMissionsData = {
  limit?: number
  skip?: number
}

export type MissionsReadMissionsResponse = MissionsPublic

export type MissionsCreateMissionData = {
  requestBody: MissionCreate
}

export type MissionsCreateMissionResponse = MissionPublic

export type MissionsReadMissionData = {
  missionId: string
}

export type MissionsReadMissionResponse = MissionPublic

export type MissionsUpdateMissionData = {
  missionId: string
  requestBody: MissionUpdate
}

export type MissionsUpdateMissionResponse = MissionPublic

export type MissionsDeleteMissionData = {
  missionId: string
}

export type MissionsDeleteMissionResponse = void

export type MissionsReadMissionsByLaunchData = {
  launchId: string
  limit?: number
  skip?: number
}

export type MissionsReadMissionsByLaunchResponse = MissionsPublic

export type MissionsReadActiveMissionsData = {
  limit?: number
  skip?: number
}

export type MissionsReadActiveMissionsResponse = MissionsPublic

export type MissionsReadPublicMissionsData = {
  limit?: number
  skip?: number
}

export type MissionsReadPublicMissionsResponse = MissionsPublic

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type TripBoatsCreateTripBoatData = {
  requestBody: TripBoatCreate
}

export type TripBoatsCreateTripBoatResponse = unknown

export type TripBoatsReadTripBoatsByTripData = {
  limit?: number
  skip?: number
  tripId: string
}

export type TripBoatsReadTripBoatsByTripResponse = unknown

export type TripBoatsReadTripBoatsByBoatData = {
  boatId: string
  limit?: number
  skip?: number
}

export type TripBoatsReadTripBoatsByBoatResponse = unknown

export type TripBoatsUpdateTripBoatData = {
  requestBody: TripBoatUpdate
  tripBoatId: string
}

export type TripBoatsUpdateTripBoatResponse = unknown

export type TripBoatsDeleteTripBoatData = {
  tripBoatId: string
}

export type TripBoatsDeleteTripBoatResponse = unknown

export type TripsReadTripsData = {
  limit?: number
  skip?: number
}

export type TripsReadTripsResponse = TripsPublic

export type TripsCreateTripData = {
  requestBody: TripCreate
}

export type TripsCreateTripResponse = TripPublic

export type TripsReadTripData = {
  tripId: string
}

export type TripsReadTripResponse = TripPublic

export type TripsUpdateTripData = {
  requestBody: TripUpdate
  tripId: string
}

export type TripsUpdateTripResponse = TripPublic

export type TripsDeleteTripData = {
  tripId: string
}

export type TripsDeleteTripResponse = TripPublic

export type TripsReadTripsByMissionData = {
  limit?: number
  missionId: string
  skip?: number
}

export type TripsReadTripsByMissionResponse = TripsPublic

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = {
  [key: string]: string
}

export type UtilsGetUsStatesResponse = {
  [key: string]: Array<{
    [key: string]: string
  }>
}
